generator client {
  provider = "prisma-client-js"
  binaryTargets = ["linux-arm64-openssl-1.1.x", "debian-openssl-1.1.x", "darwin-arm64"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum Role {
  USER
  ADMIN
}

enum EventStatus {
  DRAFT
  PUBLISHED
  CANCELED
}

model User {
  id           String        @id @default(cuid())
  role         Role          @default(USER)
  email        String        @unique
  password     String
  firstName    String        @map("first_name")
  lastName     String        @map("last_name")
  createdAt    DateTime      @default(now()) @map("created_at")
  updatedAt    DateTime      @updatedAt @map("updated_at")
  events       Event[]
  participants Participant[]
  image        Image?

  @@map("users")
}

model Event {
  id           String        @id @default(uuid())
  userId       String        @map("user_id")
  title        String?
  description  String?
  shortDescription  String?  @map("short_description")
  status       EventStatus   @default(DRAFT)
  eventDate    DateTime?     @default(now()) @map("event_date")
  createdAt    DateTime      @default(now()) @map("created_at")
  updatedAt    DateTime      @updatedAt @map("updated_at")
  participants Participant[]
  image        Image?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@map("events")
}

model Participant {
  id        String   @id @default(uuid())
  userId    String   @map("user_id")
  eventId   String   @map("event_id")
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  user  User  @relation(fields: [userId], references: [id], onDelete: Cascade)
  event Event @relation(fields: [eventId], references: [id], onDelete: Cascade)

  @@unique([userId, eventId])
  @@map("participants")
}

model Image {
  id        String   @id @default(uuid())
  userId    String?  @unique @map("user_id")
  eventId   String?  @unique @map("event_id")
  cloudName String   @map("cloud_name")
  publicId  String   @unique @map("public_id")
  version   Int
  format    String
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  user  User?  @relation(fields: [userId], references: [id], onDelete: Cascade)
  event Event? @relation(fields: [eventId], references: [id], onDelete: Cascade)

  @@map("images")
}
